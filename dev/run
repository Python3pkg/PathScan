#!/usr/bin/env python3.4

import os
import sys

_APP_PATH = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
sys.path.insert(0, _APP_PATH)

os.environ['FSS_DEBUG_LOG'] = '1'

import fss.constants
import fss.config.log
import fss.orchestrator

#path = os.path.expanduser('~/Documents')
#path = os.path.expanduser('/Volumes/tower/images')
path = os.path.expanduser('~/development/python')

filter_rules = [
#    (fss.constants.FT_FILE, fss.constants.FILTER_INCLUDE, '*.MP4'),

#    (fss.constants.FT_DIR, fss.constants.FILTER_INCLUDE, '*234*'),

#    (fss.constants.FT_DIR, fss.constants.FILTER_INCLUDE, 'main'),
#    (fss.constants.FT_DIR, fss.constants.FILTER_INCLUDE, '2014'),
#    (fss.constants.FT_DIR, fss.constants.FILTER_INCLUDE, '*123*'),

    (fss.constants.FT_DIR, fss.constants.FILTER_INCLUDE, 'deployment'),
    (fss.constants.FT_DIR, fss.constants.FILTER_INCLUDE, 'deploy_pipe'),
    (fss.constants.FT_FILE, fss.constants.FILTER_EXCLUDE, '*.py'),
]

def file_handler(entry_filepath):
    print("FOUND: [%s]" % (entry_filepath,))

print("Before.")

o = fss.orchestrator.Orchestrator(path, filter_rules, file_handler)
o.run()

print("After.")
